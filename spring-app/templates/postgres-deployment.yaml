{{- if .Values.postgres.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "spring-app.fullname" . }}-postgres
  labels:
    {{- include "spring-app.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "spring-app.name" . }}-postgres
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "spring-app.name" . }}-postgres
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.credentials.username | quote }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.credentials.password | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.credentials.database | quote }}
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: {{ include "spring-app.fullname" . }}-postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "spring-app.fullname" . }}-postgres-pvc
  labels:
    {{- include "spring-app.labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgres.storage.size }}
{{- end }}